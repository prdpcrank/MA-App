// Generated by Dagger (https://dagger.dev).
package com.example.maApp.data.repository;

import com.example.maApp.data.service.MaAppDataService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MAAppRepository_Factory implements Factory<MAAppRepository> {
  private final Provider<MaAppDataService> maAppDataServiceProvider;

  public MAAppRepository_Factory(Provider<MaAppDataService> maAppDataServiceProvider) {
    this.maAppDataServiceProvider = maAppDataServiceProvider;
  }

  @Override
  public MAAppRepository get() {
    return newInstance(maAppDataServiceProvider.get());
  }

  public static MAAppRepository_Factory create(
      Provider<MaAppDataService> maAppDataServiceProvider) {
    return new MAAppRepository_Factory(maAppDataServiceProvider);
  }

  public static MAAppRepository newInstance(MaAppDataService maAppDataService) {
    return new MAAppRepository(maAppDataService);
  }
}
