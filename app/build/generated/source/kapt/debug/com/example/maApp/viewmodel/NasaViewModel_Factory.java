// Generated by Dagger (https://dagger.dev).
package com.example.maApp.viewmodel;

import com.example.maApp.domain.usecase.GetDetailsDataUseCase;
import com.example.maApp.domain.usecase.GetMaAppDataUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NasaViewModel_Factory implements Factory<NasaViewModel> {
  private final Provider<GetMaAppDataUseCase> getMaAppDataUseCaseProvider;

  private final Provider<GetDetailsDataUseCase> getDetailsDataUseCaseProvider;

  public NasaViewModel_Factory(Provider<GetMaAppDataUseCase> getMaAppDataUseCaseProvider,
      Provider<GetDetailsDataUseCase> getDetailsDataUseCaseProvider) {
    this.getMaAppDataUseCaseProvider = getMaAppDataUseCaseProvider;
    this.getDetailsDataUseCaseProvider = getDetailsDataUseCaseProvider;
  }

  @Override
  public NasaViewModel get() {
    return newInstance(getMaAppDataUseCaseProvider.get(), getDetailsDataUseCaseProvider.get());
  }

  public static NasaViewModel_Factory create(
      Provider<GetMaAppDataUseCase> getMaAppDataUseCaseProvider,
      Provider<GetDetailsDataUseCase> getDetailsDataUseCaseProvider) {
    return new NasaViewModel_Factory(getMaAppDataUseCaseProvider, getDetailsDataUseCaseProvider);
  }

  public static NasaViewModel newInstance(GetMaAppDataUseCase getMaAppDataUseCase,
      GetDetailsDataUseCase getDetailsDataUseCase) {
    return new NasaViewModel(getMaAppDataUseCase, getDetailsDataUseCase);
  }
}
